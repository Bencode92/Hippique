name: France Galop Data Extraction

on:
  schedule:
    # Exécution quotidienne à 2h du matin
    - cron: '0 2 * * *'
  workflow_dispatch:
    # Permet l'exécution manuelle depuis l'interface GitHub
    inputs:
      categories:
        description: 'Catégories à extraire (séparées par des virgules, laisser vide pour toutes)'
        required: false
        default: ''
      use_enhanced:
        description: 'Utiliser le script amélioré (yes/no)'
        required: false
        default: 'yes'

# Définition explicite des permissions
permissions:
  contents: write

jobs:
  extract_data:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests beautifulsoup4
      
      - name: Determine script to use
        id: script-selection
        run: |
          if [[ "${{ github.event.inputs.use_enhanced }}" == "no" ]]; then
            echo "script_name=scraper.py" >> $GITHUB_OUTPUT
            echo "Using standard scraper script"
          else
            echo "script_name=scraper_enhanced.py" >> $GITHUB_OUTPUT
            echo "Using enhanced scraper script"
          fi
      
      - name: Run extraction script
        run: python ${{ steps.script-selection.outputs.script_name }} ${{ github.event.inputs.categories }}
      
      - name: Prepare directories for commit
        run: |
          # Créer les dossiers s'ils n'existent pas encore pour éviter des erreurs de commit
          mkdir -p data/raw_csv data/debug data/previous
          touch data/.gitkeep data/raw_csv/.gitkeep data/debug/.gitkeep data/previous/.gitkeep
      
      - name: Commit and push if changes
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          
          # Ajouter tous les fichiers pertinents
          git add data/*.json data/*.csv data/raw_csv/* 
          
          # Vérifier s'il y a des changements à committer
          if git diff --cached --quiet; then
            echo "Aucun changement détecté"
          else
            git commit -m "Update data - $(date)"
            git push
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
